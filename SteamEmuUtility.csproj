<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{4FDF1E89-5BC3-4C72-8FDA-0D580E7A5D5F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SteamEmuUtility</RootNamespace>
    <AssemblyName>SteamEmuUtility</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="INIFileParser, Version=2.5.2.0, Culture=neutral, PublicKeyToken=79af7b307b65cf3c, processorArchitecture=MSIL">
      <HintPath>packages\ini-parser.2.5.2\lib\net20\INIFileParser.dll</HintPath>
    </Reference>
    <Reference Include="Playnite.SDK, Version=6.11.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>packages\PlayniteSDK.6.11.0\lib\net462\Playnite.SDK.dll</HintPath>
    </Reference>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="protobuf-net, Version=2.0.0.668, Culture=neutral, PublicKeyToken=257b51d87d2e4d67, processorArchitecture=MSIL">
      <HintPath>packages\protobuf-net.2.0.0.668\lib\net40\protobuf-net.dll</HintPath>
    </Reference>
    <Reference Include="SevenZipSharp, Version=1.2.191.0, Culture=neutral, PublicKeyToken=c8ff6ba0184838bb, processorArchitecture=MSIL">
      <HintPath>packages\Squid-Box.SevenZipSharp.1.2.191\lib\net45\SevenZipSharp.dll</HintPath>
    </Reference>
    <Reference Include="SteamKit2, Version=1.8.3.0, Culture=neutral, PublicKeyToken=ed3ce47ed5aad940, processorArchitecture=MSIL">
      <HintPath>packages\SteamKit2.1.8.3\lib\net45\SteamKit2.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Management" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Common\Converters.cs" />
    <Compile Include="Common\ImageCommon.cs" />
    <Compile Include="Common\Extensions\ProcessExtensions.cs" />
    <Compile Include="Common\Extensions\StringExtensions.cs" />
    <Compile Include="Common\FileSystem.cs" />
    <Compile Include="Common\Goldberg\Configs\ConfigsCommon.cs" />
    <Compile Include="Common\Goldberg\GoldbergCommon.cs" />
    <Compile Include="Common\Goldberg\GoldbergGenerator.cs" />
    <Compile Include="Common\Goldberg\Models\Configs.cs" />
    <Compile Include="Common\Goldberg\Models\GoldbergGame.cs" />
    <Compile Include="Common\Goldberg\GoldbergTasks.cs" />
    <Compile Include="Common\GreenLuma\GreenLumaCommon.cs" />
    <Compile Include="Common\GreenLuma\GreenLumaGenerator.cs" />
    <Compile Include="Common\GreenLuma\GreenLumaTasks.cs" />
    <Compile Include="Common\DlcManagerCommon.cs" />
    <Compile Include="Common\Steam\IStoreServiceCommon.cs" />
    <Compile Include="Common\Native\Fileapi.cs" />
    <Compile Include="Common\Native\Kernel32.cs" />
    <Compile Include="Common\Native\Ntdll.cs" />
    <Compile Include="Common\Native\Processthreadsapi.cs" />
    <Compile Include="Common\Native\Winbase.cs" />
    <Compile Include="Common\Native\Windef.cs" />
    <Compile Include="Common\Native\winuser.cs" />
    <Compile Include="Common\Paths.cs" />
    <Compile Include="Common\Steam\Models\DlcInfo.cs" />
    <Compile Include="Common\Steam\Models\SteamCMDApi.cs" />
    <Compile Include="Common\Steam\SteamAppDetails.cs" />
    <Compile Include="Common\Steam\SteamCMDApiCommon.cs" />
    <Compile Include="Common\Steam\SteamCommon.cs" />
    <Compile Include="Common\PlayniteCommon.cs" />
    <Compile Include="Common\ProcessCommon.cs" />
    <Compile Include="Common\Steam\SteamUtilities.cs" />
    <Compile Include="Common\Web\Downloader.cs" />
    <Compile Include="Common\Web\HttpDownloader.cs" />
    <Compile Include="Common\Steam\Models\AppDetails.cs" />
    <Compile Include="Common\Steam\Models\AppInfo.cs" />
    <Compile Include="Common\Steam\Models\AppList.cs" />
    <Compile Include="Common\Web\InternetConnectionChecker.cs" />
    <Compile Include="PlayController\GoldbergController.cs" />
    <Compile Include="Common\Goldberg\ParseController.cs" />
    <Compile Include="Services\SteamService.cs" />
    <Compile Include="SteamEmuUtility.cs" />
    <Compile Include="SteamEmuUtilitySettings.cs" />
    <Compile Include="SteamEmuUtilitySettingsView.xaml.cs">
      <DependentUpon>SteamEmuUtilitySettingsView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ViewModels\GoldbergConfigViewModels.cs" />
    <Compile Include="ViewModels\DlcManagerViewModels.cs" />
    <Compile Include="Views\GoldbergConfigView.xaml.cs">
      <DependentUpon>GoldbergConfigView.xaml</DependentUpon>
    </Compile>
    <Compile Include="Views\DlcManagerView.xaml.cs">
      <DependentUpon>DlcManagerView.xaml</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="extension.yaml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Localization\*.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <Page Include="SteamEmuUtilitySettingsView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\GoldbergConfigView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Include="Views\DlcManagerView.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <None Include="icon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <Content Include="Libraries\7z\x64\7z.dll">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Libraries\7z\x86\7z.dll">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>if $(ConfigurationName) == Release (
if "$(ConfigurationName)" == "Release" (
    "%25LocalAppData%25\Playnite\Toolbox.exe" pack "$(ProjectDir)bin\Debug" "$(ProjectDir)bin\Release"
)

)</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent>if $(ConfigurationName) == Debug (
    rmdir /s /q "$(ProjectDir)bin\Debug"
) else (
rmdir /s /q "$(ProjectDir)bin\Debug"
rmdir /s /q "$(ProjectDir)bin\Release"
)</PreBuildEvent>
  </PropertyGroup>
</Project>